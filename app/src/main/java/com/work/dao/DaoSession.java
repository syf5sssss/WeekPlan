package com.work.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.work.entity.Collect;
import com.work.entity.Days;
import com.work.entity.Events;
import com.work.entity.Plans;
import com.work.entity.Projects;

import com.work.dao.CollectDao;
import com.work.dao.DaysDao;
import com.work.dao.EventsDao;
import com.work.dao.PlansDao;
import com.work.dao.ProjectsDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig collectDaoConfig;
    private final DaoConfig daysDaoConfig;
    private final DaoConfig eventsDaoConfig;
    private final DaoConfig plansDaoConfig;
    private final DaoConfig projectsDaoConfig;

    private final CollectDao collectDao;
    private final DaysDao daysDao;
    private final EventsDao eventsDao;
    private final PlansDao plansDao;
    private final ProjectsDao projectsDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        collectDaoConfig = daoConfigMap.get(CollectDao.class).clone();
        collectDaoConfig.initIdentityScope(type);

        daysDaoConfig = daoConfigMap.get(DaysDao.class).clone();
        daysDaoConfig.initIdentityScope(type);

        eventsDaoConfig = daoConfigMap.get(EventsDao.class).clone();
        eventsDaoConfig.initIdentityScope(type);

        plansDaoConfig = daoConfigMap.get(PlansDao.class).clone();
        plansDaoConfig.initIdentityScope(type);

        projectsDaoConfig = daoConfigMap.get(ProjectsDao.class).clone();
        projectsDaoConfig.initIdentityScope(type);

        collectDao = new CollectDao(collectDaoConfig, this);
        daysDao = new DaysDao(daysDaoConfig, this);
        eventsDao = new EventsDao(eventsDaoConfig, this);
        plansDao = new PlansDao(plansDaoConfig, this);
        projectsDao = new ProjectsDao(projectsDaoConfig, this);

        registerDao(Collect.class, collectDao);
        registerDao(Days.class, daysDao);
        registerDao(Events.class, eventsDao);
        registerDao(Plans.class, plansDao);
        registerDao(Projects.class, projectsDao);
    }
    
    public void clear() {
        collectDaoConfig.clearIdentityScope();
        daysDaoConfig.clearIdentityScope();
        eventsDaoConfig.clearIdentityScope();
        plansDaoConfig.clearIdentityScope();
        projectsDaoConfig.clearIdentityScope();
    }

    public CollectDao getCollectDao() {
        return collectDao;
    }

    public DaysDao getDaysDao() {
        return daysDao;
    }

    public EventsDao getEventsDao() {
        return eventsDao;
    }

    public PlansDao getPlansDao() {
        return plansDao;
    }

    public ProjectsDao getProjectsDao() {
        return projectsDao;
    }

}
